/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <BitmapDatabase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


Screen1ViewBase::Screen1ViewBase()
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    box1.setPosition(0, 0, 240, 320);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));

    image1.setXY(0, 0);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_KUHMUH_VERTICAL_ID));

    shape1.setPosition(0, 0, 240, 320);
    shape1.setOrigin(40.0f, 80.0f);
    shape1.setScale(2.0f, 2.0f);
    shape1.setAngle(0.0f);
    shape1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 255));
    shape1.setPainter(shape1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1Points[4] = { { 40.0f, 0.0f }, { 80.0f, 40.0f }, { 40.0f, 80.0f }, { 0.0f, 40.0f } };
    shape1.setShape(shape1Points);

    circle1.setPosition(80, 120, 80, 80);
    circle1.setCenter(40, 40);
    circle1.setRadius(40);
    circle1.setLineWidth(0);
    circle1.setArc(0, 360);
    circle1Painter.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    circle1.setPainter(circle1Painter);

    line1.setPosition(0, 0, 240, 320);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    line1.setPainter(line1Painter);
    line1.setStart(5, 5);
    line1.setEnd(240, 320);
    line1.setLineWidth(10);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);

    add(__background);
    add(box1);
    add(image1);
    add(shape1);
    add(circle1);
    add(line1);
}

void Screen1ViewBase::setupScreen()
{

}
